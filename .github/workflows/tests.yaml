name: Rust

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: Build
        run: cargo build --verbose
      - name: Build (no default features)
        run: cargo build --verbose --no-default-features
  
  wasm:
    name: Build WASM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          profile: minimal
          override: true  

      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --target wasm32-unknown-unknown --no-default-features --features "browser"

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: Run tests
        run: cargo test --verbose

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt, clippy
          override: true
      - uses: Swatinem/rust-cache@v1
        with:
          cache-on-failure: true

      - name: cargo fmt
        run: cargo +nightly fmt -- --check
      - name: cargo clippy
        run: cargo +nightly clippy -- -D warnings
